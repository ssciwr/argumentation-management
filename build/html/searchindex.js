Search.setIndex({"docnames": ["index", "modules", "nlpannotator"], "filenames": ["index.rst", "modules.rst", "nlpannotator.rst"], "titles": ["Welcome to CWBPipe\u2019s documentation!", "nlpannotator package modules", "base module"], "terms": {"thi": [0, 2], "data": [0, 2], "pipelin": [0, 2], "provid": [0, 2], "annot": [0, 2], "text": [0, 1, 2], "corpora": 0, "nlpannot": 0, "packag": 0, "modul": 0, "base": [0, 1], "main": [0, 1], "mflair": [0, 1], "msomajo": [0, 1], "mspaci": [0, 1], "mstanza": [0, 1], "mtreetagg": [0, 1], "pipe": [0, 1], "index": [0, 2], "search": [0, 2], "page": 0, "decodecorpu": [1, 2], "decode_to_fil": [1, 2], "encodecorpu": [1, 2], "add_tags_to_corpu": [1, 2], "encode_vrt": [1, 2], "fix_path": [1, 2], "queri": [1, 2], "setup": [1, 2], "outobject": [1, 2], "assemble_output_s": [1, 2], "assemble_output_token": [1, 2], "collect_result": [1, 2], "get_nam": [1, 2], "get_stag": [1, 2], "grab_ent": [1, 2], "grab_lemma": [1, 2], "grab_tag": [1, 2], "iter": [1, 2], "iterate_token": [1, 2], "open_outfil": [1, 2], "out_shortlist": [1, 2], "purg": [1, 2], "switch_styl": [1, 2], "token_list": [1, 2], "write_vrt": [1, 2], "write_xml": [1, 2], "preparerun": [1, 2], "get_cor": [1, 2], "get_text": [1, 2], "load_input_dict": [1, 2], "validate_input_dict": [1, 2], "call_flair": [1, 2], "call_somajo": [1, 2], "call_spaci": [1, 2], "call_stanza": [1, 2], "call_treetagg": [1, 2], "run": [1, 2], "myflair": [1, 2], "apply_to": [1, 2], "outflair": [1, 2], "sentence_token_list": [1, 2], "mysomajo": [1, 2], "outsomajo": [1, 2], "sentenc": [1, 2], "myspaci": [1, 2], "outspaci": [1, 2], "mystanza": [1, 2], "outstanza": [1, 2], "word_list": [1, 2], "ner": [1, 2], "mytreetagg": [1, 2], "outtreetagg": [1, 2], "treetaggerdoc": [1, 2], "lemma": [1, 2], "po": [1, 2], "setconfig": [1, 2], "set_processor": [1, 2], "set_tool": [1, 2], "class": 2, "mydict": 2, "decod": 2, "corpu": 2, "from": 2, "cwb": 2, "inherit": 2, "directori": 2, "home": 2, "runner": 2, "work": 2, "argument": 2, "manag": 2, "doc": 2, "verbos": 2, "true": 2, "specif": 2, "p": 2, "attribut": 2, "": 2, "function": 2, "given": 2, "out": 2, "file": 2, "If": 2, "write": 2, "i": 2, "suppos": 2, "current": 2, "one": 2, "can": 2, "paramat": 2, "locat": 2, "need": 2, "rel": 2, "dict": 2, "object": 2, "encod": 2, "vrt": 2, "xml": 2, "classmethod": 2, "ptag": 2, "list": 2, "stag": 2, "add": 2, "tag": 2, "an": 2, "alreadi": 2, "exist": 2, "should": 2, "us": 2, "output": 2, "pretoken": 2, "said": 2, "assur": 2, "correct": 2, "align": 2, "arg": 2, "dictionari": 2, "contain": 2, "inform": 2, "These": 2, "ar": 2, "check": 2, "against": 2, "present": 2, "registri": 2, "onli": 2, "structur": 2, "new": 2, "static": 2, "path": 2, "str": 2, "conveni": 2, "fix": 2, "neccessari": 2, "option": 2, "flush": 2, "return": 2, "input": 2, "bool": 2, "funtion": 2, "wheter": 2, "found": 2, "empti": 2, "creat": 2, "job": 2, "start": 2, "int": 2, "style": 2, "The": 2, "namespac": 2, "differ": 2, "select": 2, "method": 2, "overwritten": 2, "ad": 2, "depend": 2, "requir": 2, "map": 2, "attribute_nam": 2, "make": 2, "convers": 2, "clear": 2, "duplic": 2, "code": 2, "templat": 2, "assembl": 2, "tool": 2, "level": 2, "token": 2, "tid": 2, "word": 2, "collect": 2, "request": 2, "after": 2, "appli": 2, "paramet": 2, "string": 2, "line": 2, "load": 2, "name": 2, "get": 2, "entiti": 2, "properti": 2, "attrnam": 2, "sent": 2, "through": 2, "outnam": 2, "initi": 2, "remov": 2, "befor": 2, "compar": 2, "out_str": 2, "replac": 2, "problemat": 2, "pattern": 2, "switch": 2, "myobj": 2, "convert": 2, "none": 2, "corpus_nam": 2, "semi": 2, "includ": 2, "tab": 2, "space": 2, "all": 2, "gener": 2, "pre": 2, "process": 2, "find": 2, "how": 2, "mani": 2, "cpu": 2, "core": 2, "avail": 2, "read": 2, "specifi": 2, "json": 2, "without": 2, "extens": 2, "dict_in": 2, "islist": 2, "fals": 2, "path_json": 2, "path_txt": 2, "subdict": 2, "flair": 2, "doe": 2, "treetagg": 2, "raw": 2, "below": 2, "textual": 2, "0": 2, "combin": 2, "simultan": 2, "somajo": 2, "tokenize_text": 2, "mai": 2, "paragraph": 2, "model": 2, "de_cmc": 2, "en_ptb": 2, "split_sent": 2, "perform": 2, "split": 2, "addit": 2, "assembli": 2, "which": 2, "well": 2, "number": 2, "previou": 2, "easili": 2, "keep": 2, "track": 2, "type": 2, "spaci": 2, "assemlb": 2, "stanza": 2, "sever": 2, "extract": 2, "outdict": 2, "set": 2, "config": 2, "each": 2, "here": 2, "we": 2, "1": 2, "2": 2, "languag": 2, "updat": 2, "processor": 2, "sub": 2}, "objects": {"": [[2, 0, 0, "-", "base"], [2, 0, 0, "-", "main"], [2, 0, 0, "-", "mflair"], [2, 0, 0, "-", "msomajo"], [2, 0, 0, "-", "mspacy"], [2, 0, 0, "-", "mstanza"], [2, 0, 0, "-", "mtreetagger"], [2, 0, 0, "-", "pipe"]], "base": [[2, 1, 1, "", "DecodeCorpus"], [2, 1, 1, "", "EncodeCorpus"], [2, 1, 1, "", "OutObject"], [2, 1, 1, "", "PrepareRun"]], "base.DecodeCorpus": [[2, 2, 1, "", "decode_to_file"]], "base.EncodeCorpus": [[2, 2, 1, "", "add_tags_to_corpus"], [2, 2, 1, "", "encode_vrt"], [2, 2, 1, "", "fix_path"], [2, 2, 1, "", "query"], [2, 2, 1, "", "setup"]], "base.OutObject": [[2, 2, 1, "", "assemble_output_sent"], [2, 2, 1, "", "assemble_output_tokens"], [2, 2, 1, "", "collect_results"], [2, 2, 1, "", "get_names"], [2, 2, 1, "", "get_stags"], [2, 2, 1, "", "grab_ent"], [2, 2, 1, "", "grab_lemma"], [2, 2, 1, "", "grab_tag"], [2, 2, 1, "", "iterate"], [2, 2, 1, "", "iterate_tokens"], [2, 2, 1, "", "open_outfile"], [2, 2, 1, "", "out_shortlist"], [2, 2, 1, "", "purge"], [2, 2, 1, "", "switch_style"], [2, 2, 1, "", "token_list"], [2, 2, 1, "", "write_vrt"], [2, 2, 1, "", "write_xml"]], "base.PrepareRun": [[2, 2, 1, "", "get_cores"], [2, 2, 1, "", "get_text"], [2, 2, 1, "", "load_input_dict"], [2, 2, 1, "", "validate_input_dict"]], "main": [[2, 3, 1, "", "call_flair"], [2, 3, 1, "", "call_somajo"], [2, 3, 1, "", "call_spacy"], [2, 3, 1, "", "call_stanza"], [2, 3, 1, "", "call_treetagger"], [2, 3, 1, "", "run"]], "mflair": [[2, 1, 1, "", "MyFlair"], [2, 1, 1, "", "OutFlair"]], "mflair.MyFlair": [[2, 2, 1, "", "apply_to"]], "mflair.OutFlair": [[2, 2, 1, "", "assemble_output_tokens"], [2, 2, 1, "", "grab_tag"], [2, 2, 1, "", "sentence_token_list"]], "msomajo": [[2, 1, 1, "", "MySomajo"], [2, 1, 1, "", "OutSomajo"]], "msomajo.MySomajo": [[2, 2, 1, "", "apply_to"]], "msomajo.OutSomajo": [[2, 2, 1, "", "assemble_output_sent"], [2, 4, 1, "", "sentences"]], "mspacy": [[2, 1, 1, "", "MySpacy"], [2, 1, 1, "", "OutSpacy"]], "mspacy.MySpacy": [[2, 2, 1, "", "apply_to"]], "mspacy.OutSpacy": [[2, 2, 1, "", "assemble_output_tokens"], [2, 4, 1, "", "sentences"]], "mstanza": [[2, 1, 1, "", "MyStanza"], [2, 1, 1, "", "OutStanza"], [2, 3, 1, "", "ner"]], "mstanza.MyStanza": [[2, 2, 1, "", "apply_to"]], "mstanza.OutStanza": [[2, 2, 1, "", "assemble_output_tokens"], [2, 2, 1, "", "iterate"], [2, 4, 1, "", "sentences"], [2, 2, 1, "", "token_list"], [2, 2, 1, "", "word_list"]], "mtreetagger": [[2, 1, 1, "", "MyTreetagger"], [2, 1, 1, "", "OutTreetagger"], [2, 1, 1, "", "TreetaggerDoc"]], "mtreetagger.MyTreetagger": [[2, 2, 1, "", "apply_to"]], "mtreetagger.OutTreetagger": [[2, 2, 1, "", "assemble_output_tokens"]], "mtreetagger.TreetaggerDoc": [[2, 4, 1, "", "lemma"], [2, 4, 1, "", "pos"], [2, 4, 1, "", "text"]], "pipe": [[2, 1, 1, "", "SetConfig"]], "pipe.SetConfig": [[2, 2, 1, "", "set_processors"], [2, 2, 1, "", "set_tool"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "cwbpipe": 0, "": 0, "document": 0, "content": 0, "indic": 0, "tabl": 0, "nlpannot": 1, "packag": 1, "modul": [1, 2], "base": 2, "main": 2, "mflair": 2, "msomajo": 2, "mspaci": 2, "mstanza": 2, "mtreetagg": 2, "pipe": 2}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to CWBPipe\u2019s documentation!": [[0, "welcome-to-cwbpipe-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "nlpannotator package modules": [[1, "nlpannotator-package-modules"]], "base module": [[2, "module-base"]], "main module": [[2, "module-main"]], "mflair module": [[2, "module-mflair"]], "msomajo module": [[2, "module-msomajo"]], "mspacy module": [[2, "module-mspacy"]], "mstanza module": [[2, "module-mstanza"]], "mtreetagger module": [[2, "module-mtreetagger"]], "pipe module": [[2, "module-pipe"]]}, "indexentries": {"decodecorpus (class in base)": [[2, "base.DecodeCorpus"]], "encodecorpus (class in base)": [[2, "base.EncodeCorpus"]], "myflair (class in mflair)": [[2, "mflair.MyFlair"]], "mysomajo (class in msomajo)": [[2, "msomajo.MySomajo"]], "myspacy (class in mspacy)": [[2, "mspacy.MySpacy"]], "mystanza (class in mstanza)": [[2, "mstanza.MyStanza"]], "mytreetagger (class in mtreetagger)": [[2, "mtreetagger.MyTreetagger"]], "outflair (class in mflair)": [[2, "mflair.OutFlair"]], "outobject (class in base)": [[2, "base.OutObject"]], "outsomajo (class in msomajo)": [[2, "msomajo.OutSomajo"]], "outspacy (class in mspacy)": [[2, "mspacy.OutSpacy"]], "outstanza (class in mstanza)": [[2, "mstanza.OutStanza"]], "outtreetagger (class in mtreetagger)": [[2, "mtreetagger.OutTreetagger"]], "preparerun (class in base)": [[2, "base.PrepareRun"]], "setconfig (class in pipe)": [[2, "pipe.SetConfig"]], "treetaggerdoc (class in mtreetagger)": [[2, "mtreetagger.TreetaggerDoc"]], "add_tags_to_corpus() (base.encodecorpus class method)": [[2, "base.EncodeCorpus.add_tags_to_corpus"]], "apply_to() (mflair.myflair method)": [[2, "mflair.MyFlair.apply_to"]], "apply_to() (msomajo.mysomajo method)": [[2, "msomajo.MySomajo.apply_to"]], "apply_to() (mspacy.myspacy method)": [[2, "mspacy.MySpacy.apply_to"]], "apply_to() (mstanza.mystanza method)": [[2, "mstanza.MyStanza.apply_to"]], "apply_to() (mtreetagger.mytreetagger method)": [[2, "mtreetagger.MyTreetagger.apply_to"]], "assemble_output_sent() (base.outobject method)": [[2, "base.OutObject.assemble_output_sent"]], "assemble_output_sent() (msomajo.outsomajo method)": [[2, "msomajo.OutSomajo.assemble_output_sent"]], "assemble_output_tokens() (base.outobject method)": [[2, "base.OutObject.assemble_output_tokens"]], "assemble_output_tokens() (mflair.outflair method)": [[2, "mflair.OutFlair.assemble_output_tokens"]], "assemble_output_tokens() (mspacy.outspacy method)": [[2, "mspacy.OutSpacy.assemble_output_tokens"]], "assemble_output_tokens() (mstanza.outstanza method)": [[2, "mstanza.OutStanza.assemble_output_tokens"]], "assemble_output_tokens() (mtreetagger.outtreetagger method)": [[2, "mtreetagger.OutTreetagger.assemble_output_tokens"]], "base": [[2, "module-base"]], "call_flair() (in module main)": [[2, "main.call_flair"]], "call_somajo() (in module main)": [[2, "main.call_somajo"]], "call_spacy() (in module main)": [[2, "main.call_spacy"]], "call_stanza() (in module main)": [[2, "main.call_stanza"]], "call_treetagger() (in module main)": [[2, "main.call_treetagger"]], "collect_results() (base.outobject method)": [[2, "base.OutObject.collect_results"]], "decode_to_file() (base.decodecorpus method)": [[2, "base.DecodeCorpus.decode_to_file"]], "encode_vrt() (base.encodecorpus method)": [[2, "base.EncodeCorpus.encode_vrt"]], "fix_path() (base.encodecorpus static method)": [[2, "base.EncodeCorpus.fix_path"]], "get_cores() (base.preparerun static method)": [[2, "base.PrepareRun.get_cores"]], "get_names() (base.outobject static method)": [[2, "base.OutObject.get_names"]], "get_stags() (base.outobject method)": [[2, "base.OutObject.get_stags"]], "get_text() (base.preparerun static method)": [[2, "base.PrepareRun.get_text"]], "grab_ent() (base.outobject method)": [[2, "base.OutObject.grab_ent"]], "grab_lemma() (base.outobject method)": [[2, "base.OutObject.grab_lemma"]], "grab_tag() (base.outobject method)": [[2, "base.OutObject.grab_tag"]], "grab_tag() (mflair.outflair method)": [[2, "mflair.OutFlair.grab_tag"]], "iterate() (base.outobject method)": [[2, "base.OutObject.iterate"]], "iterate() (mstanza.outstanza method)": [[2, "mstanza.OutStanza.iterate"]], "iterate_tokens() (base.outobject method)": [[2, "base.OutObject.iterate_tokens"]], "lemma (mtreetagger.treetaggerdoc property)": [[2, "mtreetagger.TreetaggerDoc.lemma"]], "load_input_dict() (base.preparerun static method)": [[2, "base.PrepareRun.load_input_dict"]], "main": [[2, "module-main"]], "mflair": [[2, "module-mflair"]], "module": [[2, "module-base"], [2, "module-main"], [2, "module-mflair"], [2, "module-msomajo"], [2, "module-mspacy"], [2, "module-mstanza"], [2, "module-mtreetagger"], [2, "module-pipe"]], "msomajo": [[2, "module-msomajo"]], "mspacy": [[2, "module-mspacy"]], "mstanza": [[2, "module-mstanza"]], "mtreetagger": [[2, "module-mtreetagger"]], "ner() (in module mstanza)": [[2, "mstanza.ner"]], "open_outfile() (base.outobject static method)": [[2, "base.OutObject.open_outfile"]], "out_shortlist() (base.outobject method)": [[2, "base.OutObject.out_shortlist"]], "pipe": [[2, "module-pipe"]], "pos (mtreetagger.treetaggerdoc property)": [[2, "mtreetagger.TreetaggerDoc.pos"]], "purge() (base.outobject static method)": [[2, "base.OutObject.purge"]], "query() (base.encodecorpus static method)": [[2, "base.EncodeCorpus.query"]], "run() (in module main)": [[2, "main.run"]], "sentence_token_list() (mflair.outflair method)": [[2, "mflair.OutFlair.sentence_token_list"]], "sentences (msomajo.outsomajo property)": [[2, "msomajo.OutSomajo.sentences"]], "sentences (mspacy.outspacy property)": [[2, "mspacy.OutSpacy.sentences"]], "sentences (mstanza.outstanza property)": [[2, "mstanza.OutStanza.sentences"]], "set_processors() (pipe.setconfig method)": [[2, "pipe.SetConfig.set_processors"]], "set_tool() (pipe.setconfig method)": [[2, "pipe.SetConfig.set_tool"]], "setup() (base.encodecorpus method)": [[2, "base.EncodeCorpus.setup"]], "switch_style() (base.outobject static method)": [[2, "base.OutObject.switch_style"]], "text (mtreetagger.treetaggerdoc property)": [[2, "mtreetagger.TreetaggerDoc.text"]], "token_list() (base.outobject method)": [[2, "base.OutObject.token_list"]], "token_list() (mstanza.outstanza method)": [[2, "mstanza.OutStanza.token_list"]], "validate_input_dict() (base.preparerun static method)": [[2, "base.PrepareRun.validate_input_dict"]], "word_list() (mstanza.outstanza method)": [[2, "mstanza.OutStanza.word_list"]], "write_vrt() (base.outobject static method)": [[2, "base.OutObject.write_vrt"]], "write_xml() (base.outobject static method)": [[2, "base.OutObject.write_xml"]]}})